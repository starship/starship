name: Format + Docs Workflow
on:
  push:
    paths: ["docs/**", "**.md", "**.toml", "**.js", "**.json", "**.ts"]
  pull_request:
    paths: ["docs/**", "**.md", "**.toml", "**.js", "**.json", "**.ts"]

jobs:
  # Run the dprint code formatter for documentation
  dprint:
    name: Dprint [Docs Formatter]
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4
      - name: Docs | Format
        uses: dprint/check@v2.2

  # Validate preset files
  taplo:
    name: Taplo [Preset schema validation]
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4
      - name: Install | Taplo
        run: cargo install --debug --locked --version 0.9.0 taplo-cli
      - name: Presets | Validate with schema
        run: taplo lint --schema "file://${GITHUB_WORKSPACE}/.github/config-schema.json" docs/public/presets/toml/*.toml

  # If this is not a Crowdin PR, block changes to translated documentation
  block-crowdin:
    name: Block Translated Changes
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Prevent File Change
        uses: xalvarez/prevent-file-change-action@v1.6.0
        if: ${{ github.event.pull_request.head.ref != 'i18n_master' }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          pattern: docs/[a-z][a-z][a-z]?-[A-Z][A-Z]?/.*

  # Vitepress build
  vitepress:
    name: Vitepress [Build]
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4

      - name: Setup | Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: docs/package-lock.json

      - name: Setup | Install dependencies
        run: npm install
        working-directory: docs

      - name: Build | Build docs site
        run: npm run build
        working-directory: docs
