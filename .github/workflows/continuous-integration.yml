name: Continuous Integration
on: push
jobs:
  # Run the `rustfmt` code formatter
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: hecrj/setup-rust-action@master
      - uses: actions/checkout@master
      - run: rustup component add rustfmt
      - run: cargo fmt --all -- --check

  # Run the `clippy` linting tool
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: hecrj/setup-rust-action@master
      - uses: actions/checkout@master
      - run: rustup component add clippy
      - run: cargo clippy --all-targets --all-features -- -D clippy::all

  # Ensure that the project could be successfully compiled
  cargo_check:
    runs-on: ubuntu-latest
    steps:
      - uses: hecrj/setup-rust-action@master
      - uses: actions/checkout@master
      - run: cargo check --all

  # Run tests on Linux, and macOS
  # On both Rust stable and Rust nightly
  test:
    needs: [rustfmt, clippy, cargo_check]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest]
        rust: [stable, nightly]
    steps:
      # Install all the required dependencies for testing
      - uses: hecrj/setup-rust-action@master
        with:
          rust-version: ${{ matrix.rust }}

      # Install Node.js at a fixed version
      - uses: actions/setup-node@master
        with:
          node-version: "12.0.0"

      # Install Golang at a fixed version
      - uses: actions/setup-go@master
        with:
          go-version: "1.12.1"

      # Install Ruby at a fixed version
      - uses: actions/setup-ruby@master
        with:
          ruby-version: "2.6.3"

      # Install Python at a fixed version
      - uses: actions/setup-python@master
        with:
          python-version: "3.6.9"

      # Run the ignored tests that expect the above setup
      - uses: actions/checkout@master
      - run: cargo test  -- -Z unstable-options --include-ignored

  # Run the tests in the Docker image
  docker_test:
    needs: [rustfmt, clippy, cargo_check]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - run: docker pull starshipcommand/starship-test
      - run: chmod -R a+w .
      - run: ./integration_test

  github_release:
    needs: [test, docker_test]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest]
    steps:
      - uses: hecrj/setup-rust-action@master
      - uses: actions/checkout@master

      # Install cross
      # Temporary fix until https://github.com/rust-embedded/cross/pull/169 is merged.
      - run: git config --global user.email "not_necessery@dont.need"
      - run: git config --global user.name "I merge the things"
      - run: git clone https://github.com/rust-embedded/cross
      - run: cd cross
      - run: git remote add pitkley https://github.com/pitkley/cross
      - run: git fetch pitkley
      - run: git checkout 718a19c
      - run: git merge -m "No pseudo tty" pitkley/docker-no-pseudo-tty
      - run: cargo install --force --path .

      - run: cross build --target x86_64-unknown-linux-gnu --release
        name: Cross build

      - run: cp target/
