name: Continuous Integration
on: push
jobs:
  check_ruby:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: hecrj/setup-rust-action@master
      - uses: actions/checkout@master
      - run: rustup component add rustfmt
      - run: cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: hecrj/setup-rust-action@master
      - uses: actions/checkout@master
      - run: rustup component add clippy
      - run: cargo clippy --all-targets --all-features -- -D clippy::all

  cargo_check:
    runs-on: ubuntu-latest
    steps:
      - uses: hecrj/setup-rust-action@master
      - uses: actions/checkout@master
      - run: cargo check --all

  # Run tests on Linux, Windows, and macOS
  # On both Rust stable and Rust nightly
  test:
    needs: [rustfmt, clippy, cargo_check]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [stable, nightly]
    steps:
      - uses: hecrj/setup-rust-action@master
        with:
          rust-version: ${{ matrix.rust }}

      - uses: actions/setup-node@master
        with:
          node-version: '12.0.0'
      
      - uses: actions/setup-go@master
        with:
          go-version: '1.12.1'

      - uses: actions/setup-ruby@master
        with:
          ruby-version: '2.5.5'
        if: matrix.os != 'windows-latest'

      - run: choco install ruby --version 2.5.5 -y
        if: matrix.os != 'windows-latest'

      - uses: actions/setup-python@master
        with:
          python-version: '3.6.9'

      - uses: actions/checkout@master
      - run: cargo test  -- -Z unstable-options --include-ignored
