name: Deploy
on:
  push:
    tags:
      - "v*"

jobs:
  build_all_artifacts:
    name: Build All Release Artifacts
    uses: ./.github/workflows/deploy-build.yml

  # Create GitHub release with Rust build targets and release notes
  github_release:
    name: Create GitHub Release
    needs: github_build
    runs-on: ubuntu-latest
    if: ${{ github.event_name == "push" }}
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0

      - name: Setup | Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.16"

      - name: Setup | Artifacts
        uses: actions/download-artifact@v2

      - name: Setup | Checksums
        run: for file in starship-*/starship-*; do openssl dgst -sha256 -r "$file" | awk '{print $1}' > "${file}.sha256"; done

      - name: Setup | Release notes
        run: |
          go install github.com/git-chglog/git-chglog/cmd/git-chglog@v0.15.0
          git-chglog -c .github/chglog/release.yml $(git describe --tags) > RELEASE.md

      - name: Build | Publish
        uses: softprops/action-gh-release@v1
        with:
          files: starship-*/starship-*
          body_path: RELEASE.md

  # Publish starship to Crates.io
  cargo_publish:
    name: Publish Cargo Package
    runs-on: ubuntu-latest
    needs: github_release
    if: ${{ github.event_name == "push" }}
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2.4.0

      - name: Setup | Rust
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Build | Publish
        run: cargo publish --token ${{ secrets.CRATES_IO_TOKEN }}

  update_brew_formula:
    name: Update Brew Formula
    runs-on: ubuntu-latest
    needs: github_release
    if: ${{ github.event_name == "push" }}
    steps:
      - uses: mislav/bump-homebrew-formula-action@v1.16
        with:
          formula-name: starship
        env:
          COMMITTER_TOKEN: ${{ secrets.HOMEBREW_GITHUB_API_TOKEN }}

  publish_docs:
    name: Publish docs to Netlify
    runs-on: ubuntu-latest
    needs: github_release
    if: ${{ github.event_name == "push" }}
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2.4.0

      - name: Setup | Install dependencies
        run: npm install
        working-directory: docs

      - name: Build | Build docs site
        run: npm run build
        working-directory: docs

      - name: Publish
        uses: netlify/actions/cli@master
        with:
          args: deploy --prod --dir=docs/.vuepress/dist
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
